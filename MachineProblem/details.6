  Hex/Decimal memory dump (least significant word on left)
  Only lines with at least one nonzero value printed
     0/   0. : (  100/   256.)(  650/  1616.)(    4/     4.)(  200/   512.)
     4/   4. : (  200/   512.)(    0/     0.)(    0/     0.)(    0/     0.)
 state is decimal format; registers are hex 
   starting instruction 1
    0 FFFF    1   3   0    0    0    0    0    0    0   0    0    0 0000 [pc] -> mar     
    1 FFFF    1   3   0    0    0    0    0    0    0   0    0    0 0000 [[mar]] -> mdr  
    2 FFFF    1   3   0    0    0    0    0    0    0   0  100    0 0000 [mdr] -> ir     
    3 FFFF    1   3   0    0    0    0    0    0    0   0  100  100 0000 [pc]+1 -> q     

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
    4 FFFF    1   3   0    0    1    0    0    0    0   0  100  100 0000 [q] -> pc       
    5 FFFF    1   3   1    0    1    0    0    0    0   0  100  100 0000 --              
    6 FFFF    1   3   1    0    1    0    0    0    0   0  100  100 0000 --              
  230 FFFF    1   3   1    0    1    0    0    0    0   0  100  100 0000 --              
  240 FFFF    1   3   1    0    1    0    0    0    0   0  100  100 0000 [d] -> t3       

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
  295 FFFF    1   3   1    0    1    0 FFFF    0    0   0  100  100 0000 --              
  300 FFFF    1   3   1    0    1    0 FFFF    0    0   0  100  100 0000 0 -> mdr        
  310 FFFF    1   3   1    0    1    0 FFFF    0    0   0  100  100 0010 0 -> dst        
   starting instruction 2
    0    0    1   3   1    0    1    0 FFFF    0    0   0  100  100 0010 [pc] -> mar     
    1    0    1   3   1    0    1    0 FFFF    0    0   1  100  100 0010 [[mar]] -> mdr  

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
    2    0    1   3   1    0    1    0 FFFF    0    0   1  650  100 0010 [mdr] -> ir     
    3    0    1   3   1    0    1    0 FFFF    0    0   1  650  650 0010 [pc]+1 -> q     
    4    0    1   3   1    0    2    0 FFFF    0    0   1  650  650 0010 [q] -> pc       
    5    0    1   3   2    0    2    0 FFFF    0    0   1  650  650 0010 --              
    6    0    1   3   2    0    2    0 FFFF    0    0   1  650  650 0010 --              

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
  230    0    1   3   2    0    2    0 FFFF    0    0   1  650  650 0010 --              
  270    0    1   3   2    0    2    0 FFFF    0    0   1  650  650 0010 [pc] -> mar     
  271    0    1   3   2    0    2    0 FFFF    0    0   2  650  650 0010 [[mar]] -> mdr  
  272    0    1   3   2    0    2    0 FFFF    0    0   2    4  650 0010 [pc]+1 -> q     
  273    0    1   3   2    0    3    0 FFFF    0    0   2    4  650 0010 [q] -> pc       

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
  290    0    1   3   3    0    3    0 FFFF    0    0   2    4  650 0010 [mdr] -> mar    
  291    0    1   3   3    0    3    0 FFFF    0    0   4    4  650 0010 [mdr] -> t5     
  292    0    1   3   3    0    3    0 FFFF    0    4   4    4  650 0010 [[mar]] -> mdr  
  293    0    1   3   3    0    3    0 FFFF    0    4   4  200  650 0010 [mdr] -> t3     
  295    0    1   3   3    0    3    0  200    0    4   4  200  650 0010 --              

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
  360    0    1   3   3    0    3    0  200    0    4   4  200  650 0010 [t5] -> pc      
   starting instruction 3
    0    0    1   3   4    0    3    0  200    0    4   4  200  650 0010 [pc] -> mar     
    1    0    1   3   4    0    3    0  200    0    4   4  200  650 0010 [[mar]] -> mdr  
    2    0    1   3   4    0    3    0  200    0    4   4  200  650 0010 [mdr] -> ir     
    3    0    1   3   4    0    3    0  200    0    4   4  200  200 0010 [pc]+1 -> q     

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
    4    0    1   3   4    0    5    0  200    0    4   4  200  200 0010 [q] -> pc       
    5    0    1   3   5    0    5    0  200    0    4   4  200  200 0010 --              
    6    0    1   3   5    0    5    0  200    0    4   4  200  200 0010 --              
  230    0    1   3   5    0    5    0  200    0    4   4  200  200 0010 --              
  240    0    1   3   5    0    5    0  200    0    4   4  200  200 0010 [d] -> t3       

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
  295    0    1   3   5    0    5    0    0    0    4   4  200  200 0010 --              
  320    0    1   3   5    0    5    0    0    0    4   4  200  200 0010 [t3]+1 -> q     
  325    0    1   3   5    0    1    0    0    0    4   4  200  200 0010 [q] -> dst      
   starting instruction 4
    0    1    1   3   5    0    1    0    0    0    4   4  200  200 0000 [pc] -> mar     
    1    1    1   3   5    0    1    0    0    0    4   5  200  200 0000 [[mar]] -> mdr  

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
    2    1    1   3   5    0    1    0    0    0    4   5    0  200 0000 [mdr] -> ir     
    3    1    1   3   5    0    1    0    0    0    4   5    0    0 0000 [pc]+1 -> q     
    4    1    1   3   5    0    6    0    0    0    4   5    0    0 0000 [q] -> pc       
    7    1    1   3   6    0    6    0    0    0    4   5    0    0 0000 --              
    8    1    1   3   6    0    6    0    0    0    4   5    0    0 0000 --              

   st   ac    x  sp  pc   t1    q   t2   t3   t4   t5 mar  mdr   ir cvzn reg xfer
   15    1    1   3   6    0    6    0    0    0    4   5    0    0 0000 --              
  test 6: Halt instruction executed 
  Hex/Decimal memory dump (least significant word on left)
  Only lines with at least one nonzero value printed
     0/   0. : (  100/   256.)(  650/  1616.)(    4/     4.)(  200/   512.)
     4/   4. : (  200/   512.)(    0/     0.)(    0/     0.)(    0/     0.)
